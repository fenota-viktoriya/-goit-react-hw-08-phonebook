{"version":3,"file":"static/js/785.6bcd3793.chunk.js","mappings":"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","sources":["helpers/validation.js","styles/theme.js","components/Contacts/Contacts.styled.jsx","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/ContactsPage.js"],"sourcesContent":["const REQUIRED_FIELD = 'Fill the field';\nexport const nameValidate = {\n  required: REQUIRED_FIELD,\n  pattern: {\n    value: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n    message:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n};\nexport const passwordValidate = {\n  required: REQUIRED_FIELD,\n  validate: value => {\n    if (value.length < 7) {\n      return 'The Password must contain at least 7 values';\n    }\n    return true;\n  },\n};\n\nexport const emailValidate = {\n  required: REQUIRED_FIELD,\n};\n\nexport const numberValidate = {\n  required: REQUIRED_FIELD,\n  pattern: {\n    value:\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n    message:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.',\n  },\n};\n","export const theme = Object.freeze({\n  colors: {\n    white: '#ffffff',\n    gray: '#afb3c0',\n    light: '#F0FFFF',\n    dark: '#212121',\n    shadow: ' rgba(175, 203, 225, 0.39)',\n    green: '#008B00',\n    orange: '#FFA500',\n    red: ' #ff0000',\n    darkGray: '#83868d',\n    titleBC: '#E0EEEE',\n    title: '#0884F9',\n    accent: '#FF4500',\n    valueBC: '#C1CDCD',\n  },\n  border: {\n    transactionBorder: '2px solid #83868d',\n  },\n  shadow: '4px 4px 8px 0px rgba(94, 20, 4, 0.27)',\n});\n","import styled from '@emotion/styled';\nimport { theme } from 'styles';\n\nexport const ListContacts = styled.ul`\n  margin: 0px;\n  padding: 0px;\n`;\n\nexport const ItemContacts = styled.li`\n  display: flex;\n  gap: 15px;\n  align-items: baseline;s\n  padding: 8px;\n  height: 30px;\n`;\n\nexport const TextContacts = styled.p`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.71;\n  letter-spacing: 0.03em;\n  color: ${theme.colors.title};\n`;\n\nexport const DeleteBtn = styled.button`\n  font-size: 18px;\n\n   transition: all 0.3s ease;\n  &:hover {\n  box-shadow: ${theme.shadow};\n font-size:20px;\n  border-radius: 5px;\n\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const filter = getFilter(state).toLowerCase();\n  const contacts = getContacts(state);\n  return contacts\n    .filter(contact => {\n      return contact.name.toLowerCase().includes(filter);\n    })\n    .sort((a, b) => a.name.localeCompare(b.name));\n};\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-action';\n\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error.message)));\n  };\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst contactsOperations = {\n  addContact,\n  fetchContacts,\n  deleteContact,\n};\nexport default contactsOperations;\n","import { FcFullTrash } from 'react-icons/fc';\n\nimport {\n  DeleteBtn,\n  ItemContacts,\n  ListContacts,\n  TextContacts,\n} from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport contactsOperations from 'redux/contacts/contacts-operations';\n\nexport function Contacts() {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  return (\n    <ListContacts>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ItemContacts key={id}>\n          <TextContacts>\n            {name} : {number}\n          </TextContacts>\n          <DeleteBtn\n            type=\"button\"\n            onClick={() => {\n              dispatch(contactsOperations.deleteContact(id));\n            }}\n          >\n            <FcFullTrash />\n          </DeleteBtn>\n        </ItemContacts>\n      ))}\n    </ListContacts>\n  );\n}\n","import styled from '@emotion/styled';\nimport { theme } from 'styles';\n\nexport const Wrapper = styled.div``;\nexport const TitleFilter = styled.h3`\n  color: ${theme.colors.title};\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.71;\n  letter-spacing: 0.03em;\n  color: ${theme.colors.title};\n`;\nexport const InputFilter = styled.input`\n  padding: 3px;\n  border-radius: 5px;\n`;\n","import { FcFilledFilter } from 'react-icons/fc';\nimport { changedFilter } from 'redux/contacts/contacts-action';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { InputFilter, TitleFilter, Wrapper } from './Filter.styled';\n\nexport function Filter() {\n  const value = useSelector(state => state.contacts.filter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <TitleFilter>\n        Find contacts by name <FcFilledFilter />\n      </TitleFilter>\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(changedFilter(e.currentTarget.value))}\n      />\n    </Wrapper>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { nameValidate, numberValidate } from 'helpers';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nconst theme = createTheme();\n\nexport function Form() {\n  const {\n    handleSubmit,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  const onSubmit = data => {\n    const { name, number } = data;\n    const isContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (!isContact) {\n      dispatch(contactsOperations.addContact({ name, number }));\n      reset({ data });\n      return;\n    }\n    alert(`${name} is already in contacts`);\n    reset({ data });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box component=\"div\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            ADD CONTACT FORM\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit(onSubmit)}\n            sx={{ mt: 2, display: 'flex', flexDirection: 'column' }}\n          >\n            <Controller\n              control={control}\n              rules={nameValidate}\n              name=\"name\"\n              defaultValue=\"\"\n              render={({ field }) => (\n                <TextField\n                  autoFocus\n                  autoComplete=\"off\"\n                  label=\"Name\"\n                  onChange={e => field.onChange(e)}\n                  value={field.value || ''}\n                  error={!!errors.name?.message}\n                  helperText={errors.name?.message}\n                  margin=\"normal\"\n                  sx={{ maxWidth: '350px' }}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"number\"\n              rules={numberValidate}\n              render={({ field }) => (\n                <TextField\n                  type=\"tel\"\n                  label=\"Number\"\n                  autoFocus\n                  autoComplete=\"off\"\n                  defaultValue=\"\"\n                  onChange={e => field.onChange(e)}\n                  value={field.value || ''}\n                  error={!!errors.number?.message}\n                  helperText={errors.number?.message}\n                  sx={{ maxWidth: '350px' }}\n                />\n              )}\n            />\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, maxWidth: '150px' }}\n            >\n              Add contact\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import { Typography } from '@mui/material';\nimport { Contacts } from 'components/Contacts';\nimport { Filter } from 'components/Filter';\nimport { Form } from 'components/Form';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nexport function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    const asyncFn = async () => {\n      dispatch(contactsOperations.fetchContacts());\n    };\n    asyncFn();\n  }, [dispatch]);\n  return (\n    <>\n      <Form />\n      {contacts.length !== 0 ? (\n        <>\n          <Filter />\n          <Contacts />\n        </>\n      ) : (\n        <Typography component={'span'} variant={'body2'}>\n          You haven't contacts\n        </Typography>\n      )}\n    </>\n  );\n}\n"],"names":["REQUIRED_FIELD","nameValidate","required","pattern","value","message","passwordValidate","validate","length","emailValidate","numberValidate","theme","Object","freeze","colors","white","gray","light","dark","shadow","green","orange","red","darkGray","titleBC","title","accent","valueBC","border","transactionBorder","ListContacts","styled","ItemContacts","TextContacts","DeleteBtn","getContacts","state","contacts","items","getFilteredContacts","filter","getFilter","toLowerCase","contact","name","includes","sort","a","b","localeCompare","contactsOperations","addContact","number","dispatch","addContactRequest","axios","then","data","addContactSuccess","catch","error","addContactError","fetchContacts","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContact","contactId","deleteContactRequest","deleteContactSuccess","deleteContactError","Contacts","useDispatch","filteredContacts","useSelector","map","id","type","onClick","Wrapper","TitleFilter","InputFilter","Filter","onChange","e","changedFilter","currentTarget","createTheme","Form","useForm","handleSubmit","reset","control","errors","formState","ThemeProvider","Box","component","maxWidth","CssBaseline","sx","marginTop","display","flexDirection","Typography","variant","onSubmit","find","alert","mt","rules","defaultValue","render","field","TextField","autoFocus","autoComplete","label","helperText","margin","Button","mb","ContactsPage","useEffect","asyncFn"],"sourceRoot":""}